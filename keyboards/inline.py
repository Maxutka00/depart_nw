import json
from typing import Literal, Optional
import os
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton

import config
from func.translit import translit


def electric_transport_kb(transport: Literal["trol", "tram"], num: str) -> Optional[InlineKeyboardMarkup]:
    files = list(filter(lambda x: x.startswith(f"{num}{transport}"), os.listdir(os.path.join("parsing", "photos"))))
    if len(files) == 1:
        return None
    files.sort(key=lambda x: os.path.getmtime(os.path.join("parsing", "photos", x)))
    kb = []
    for file in files:
        file = file.replace(".png", "").replace("'", '"').replace("–±—Å–ª–µ—à", "\\").replace("—Å–ª–µ—à", "/")
        name = file.split('_')
        name = f"{name[1]} {('(–¥–æ ' + name[2] + ')') if name[2] != '' else ''}"
        file = translit(file)
        button = InlineKeyboardButton(name, callback_data=file)
        kb.append([button])
    return InlineKeyboardMarkup(kb) if kb else None


def del_mute_kb(user_id: int) -> InlineKeyboardMarkup:
    kb = [[InlineKeyboardButton("–°–Ω—è—Ç—å –º—É—Ç", callback_data=f"unmute_{user_id}")]]
    return InlineKeyboardMarkup(kb)


def donate_kb() -> Optional[InlineKeyboardMarkup]:
    if config.donate_link == "":
        return None
    kb = [[InlineKeyboardButton("–ü–æ–∂–µ—Ä–≤–æ–≤–∞—Ç—å", url=config.donate_link)]]
    return InlineKeyboardMarkup(kb)


def stats_kb() -> InlineKeyboardMarkup:
    kb = [
        [InlineKeyboardButton("–ó–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="stat_today"),
         InlineKeyboardButton("–ó–∞ –≤—á–µ—Ä–∞", callback_data="stat_yesterday")],
        [InlineKeyboardButton("–ó–∞ —ç—Ç–æ—Ç –º–µ—Å—è—Ü", callback_data="stat_this_month"),
         InlineKeyboardButton("–ó–∞ –ø—Ä–æ—à–ª—ã–π –º–µ—Å—è—Ü", callback_data="stat_last_month")],
        [InlineKeyboardButton("–ó–∞ –≤—Å—ë –≤—Ä–µ–º—è", callback_data="stat_all_time")],
        [InlineKeyboardButton("–°–≤–æ–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫", callback_data="stat_costum_stat")]
    ]
    return InlineKeyboardMarkup(kb)


cancel_keyboard = InlineKeyboardMarkup([[InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data="cancel")]])


def repair_kb() -> InlineKeyboardMarkup:
    with open(os.path.join("data", "settings.json"), "r") as f:
        data = json.load(f)
    kb = [
        [InlineKeyboardButton(f"{'üü¢–í—ã–∫–ª—é—á–∏—Ç—å' if data['user_commands_work'] else 'üî¥–í–∫–ª—é—á–∏—Ç—å'} —é–∑–µ—Ä –∫–æ–º–∞–Ω–¥—ã",
                              callback_data="change_user_commands_work")],
        [InlineKeyboardButton(f"{'üü¢–í—ã–∫–ª—é—á–∏—Ç—å' if data['admins_commands_work'] else 'üî¥–í–∫–ª—é—á–∏—Ç—å'} –∞–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã",
                              callback_data="change_admins_commands_work")],
        [InlineKeyboardButton(f"{'–í—ã–∫–ª—é—á–∏—Ç—å' if data['admins_commands_work'] and data['user_commands_work']  else '–í–∫–ª—é—á–∏—Ç—å'} –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã",
                              callback_data="change_all_commands_work")],
    ]
    return InlineKeyboardMarkup(kb)
